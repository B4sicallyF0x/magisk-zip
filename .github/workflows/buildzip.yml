on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      actions: write
      checks: write
      deployments: write
      discussions: write
      id-token: write
      packages: write
      pages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine Pre-release status
        id: prerelease_status
        run: |
          if [[ "${GITHUB_REF}" =~ - ]]; then
            echo "prerelease=${GITHUB_REF##*-}" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV

      - name: Run Build Script
        run: ./build.sh

      - name: Set Body
        id: set_body
        run: |
          if [ "${{ env.prerelease }}" != "false" ]; then
            echo "body=**Release not recommended to use on your main devices**" >> $GITHUB_ENV
          else
            echo "body=" >> $GITHUB_ENV
          fi

      - name: Get Tag Name
        id: extract_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: ${{ env.tag }}
          body: ${{ env.body }}
          draft: false
          prerelease: ${{ env.prerelease }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: R1.zip
          asset_name: R1.zip
          asset_content_type: application/zip
